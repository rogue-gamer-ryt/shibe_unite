{"version":3,"sources":["Cards/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["getDogsAPI","Cards","state","dogs","loading","componentDidMount","getDogs","setState","fetch","then","res","json","data","catch","console","log","this","dog1","dog2","Spinner","animation","className","src","alt","Button","variant","onClick","Component","App","React","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIMA,EACJ,mEAEmBC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,SAAS,G,EAEXC,kBAAoB,WAClB,EAAKC,W,EAGPA,QAAU,WACR,EAAKC,SAAS,CAAEH,SAAS,IACzBI,MAAMR,GACHS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,EAAKL,SAAS,CAAEJ,KAAMS,EAAMR,SAAS,OAEtCS,MAAMC,QAAQC,M,4CAEnB,WAAU,IAAD,OACP,EAA0BC,KAAKd,MAAvBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACRa,EAAOd,EAAK,GACZe,EAAOf,EAAK,GAElB,OAAgB,IAAZC,EAAyB,cAACe,EAAA,EAAD,CAASC,UAAU,WAE9C,sBAAKC,UAAU,wBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,MAAMC,IAAKL,EAAMM,IAAI,KACpC,oBAAIF,UAAU,OAAd,wBACA,cAACG,EAAA,EAAD,CACEC,QAAQ,kBACRJ,UAAU,aACVK,QAAS,kBAAM,EAAKpB,WAHtB,qBAQF,oBAAIe,UAAU,KAAd,gBACA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,MAAMC,IAAKJ,EAAMK,IAAI,KACpC,oBAAIF,UAAU,OAAd,mCACA,cAACG,EAAA,EAAD,CACEC,QAAQ,eACRJ,UAAU,aACVK,QAAS,kBAAM,EAAKpB,WAHtB,4B,GAzCyBqB,aCSpBC,G,kKATb,WACE,OACI,sBAAKP,UAAU,OAAf,UACA,oBAAIA,UAAU,cAAd,gCACA,cAAC,EAAD,W,GANUQ,IAAMF,YCOTG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9b3ae3f3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst getDogsAPI =\r\n  \"https://shibe.online/api/shibes?count=2&urls=true&httpsUrls=true\";\r\n\r\nexport default class Cards extends Component {\r\n  state = {\r\n    dogs: [],\r\n    loading: true\r\n  };\r\n  componentDidMount = () => {\r\n    this.getDogs();\r\n  };\r\n\r\n  getDogs = () => {\r\n    this.setState({ loading: true });\r\n    fetch(getDogsAPI)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ dogs: data, loading: false });\r\n      })\r\n      .catch(console.log);\r\n  };\r\n  render() {\r\n    const { dogs, loading } = this.state;\r\n    const dog1 = dogs[0];\r\n    const dog2 = dogs[1];\r\n   \r\n    if (loading === true) return <Spinner animation=\"border\" />;\r\n    return (\r\n      <div className=\"container text-center\">\r\n        <div className=\"img-container\">\r\n          <img className=\"img\" src={dog1} alt=\"\" />\r\n          <h3 className=\"name\">Am I cute?</h3>\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            className=\"choose-btn\"\r\n            onClick={() => this.getDogs()}\r\n          >\r\n            This\r\n          </Button>\r\n        </div>\r\n        <h3 className=\"or\">OR</h3>\r\n        <div className=\"img-container\">\r\n          <img className=\"img\" src={dog2} alt=\"\" />\r\n          <h3 className=\"name\">Okay...look at me now</h3>\r\n          <Button\r\n            variant=\"outline-info\"\r\n            className=\"choose-btn\"\r\n            onClick={() => this.getDogs()}\r\n          >\r\n            That\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Cards from './Cards/Cards'\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (      \r\n        <div className=\"main\">\r\n        <h1 className=\"text-center\">Keep on looking...</h1>\r\n        <Cards />\r\n      </div>        \r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}